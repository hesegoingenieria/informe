<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="icon" href="/img/favicon.png" />
    <link rel="stylesheet" href="/css/main.css" />
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap"
      rel="stylesheet"
    />
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css"
    />
    <title>Informe de Ejecución</title>
    <script src="https://cdn.tailwindcss.com"></script>
  </head>
  <body class="flex flex-col min-h-screen sm:px-20 lg:px-52 xl:px-80">
    <%- include('partials/header.ejs') %>
    <hr />
    <main class="flex flex-col mt-5 gap-2">
      <%- include('formulario.ejs') %>
      <span id="errores" class="w-full text-red-600 text-center pt-5"></span>
    </main>
    <footer class="fixed bottom-2 left-2 text-slate-400">
      Derechos Reservados - Hesego Ingeniería S.A.S - v.2
    </footer>
    <style>
      * {
        font-family: "Poppins", sans-serif;
      }
    </style>
    <script type="module">
      import xlsx from "https://cdn.sheetjs.com/xlsx-0.20.2/package/xlsx.mjs";
      const inputFechaInicio = document.getElementById("fecha_inicio");
      const inputFechaFin = document.getElementById("fecha_fin");
      const sector = document.getElementById("sector");
      const formulario = document.getElementById("formulario");
      const btnDescargar = document.getElementById("descargar");
      const spanErrores = document.getElementById("errores");

      let estadoInforme = true;
      const btnEjecucion = document.getElementById("btn-ejecucion");
      const btnConsumo = document.getElementById("btn-consumo");

      function formateador(fecha) {
        const data = fecha.split("-").join("/");

        return data;
      }
      function cambiarEstado(estado) {
        estadoInforme = estado;
      }

      btnEjecucion.addEventListener("click", (e) => {
        btnEjecucion.className += " border-b-2 border-[#009999]";
        btnConsumo.className =
          "text-center p-3 w-full cursor-pointer hover:bg-[#009999] hover:text-white transition duration-400 rounded-t";
        cambiarEstado(true);
      });
      btnConsumo.addEventListener("click", (e) => {
        btnConsumo.className += " border-b-2 border-[#009999]";
        btnEjecucion.className =
          "text-center p-3 w-full cursor-pointer hover:bg-[#009999] hover:text-white transition duration-400 rounded-t";
        cambiarEstado(false);
      });

      formulario.addEventListener("submit", async (e) => {
        e.preventDefault();
        const inicio = new Date(inputFechaInicio.value);
        const fin = new Date(inputFechaFin.value);
        const [sectorId, sectorName] = sector.value.split("-");

        if (
          fin < inicio ||
          fin == "Invalid Date" ||
          inicio == "Invalid Date" ||
          sector == ""
        ) {
          spanErrores.innerHTML =
            'La <strong>"Fecha Fin"</strong> no puede ser menor a la <strong>"Fecha Inicio"</strong>';
          setTimeout(() => {
            spanErrores.innerHTML = "";
          }, 3000);
        } else {
          btnDescargar.innerHTML = "<p>Descargando...</p>";
          if (estadoInforme) {
            fetch(
              `/order?fechaInicio=${formateador(
                inputFechaInicio.value
              )}&fechaFin=${formateador(inputFechaFin.value)}&sede=${sectorId}`,
              {
                method: "GET",
                headers: {
                  "Content-Type": "application/json",
                },
              }
            )
              .then((response) => response.json())
              .then((data) => {
                // Manejar la respuesta del servicio
                const workbook = xlsx.utils.book_new();
                const worksheet = xlsx.utils.json_to_sheet(data);
                xlsx.utils.book_append_sheet(workbook, worksheet, `Ordenes`);
                xlsx.writeFile(
                  workbook,
                  `Ejecucion_${sectorName}_entre_${inputFechaInicio.value}_y_${inputFechaFin.value}.xlsx`
                );
                btnDescargar.innerHTML =
                  "Descargar Excel <span class='fas fa-download'></span>";
                inputFechaInicio.value = null;
                inputFechaFin.value = null;
                sector.selectedIndex = 0;
              })
              .catch((error) => {
                spanErrores.innerHTML = error;
              });
          } else {
            fetch(
              `/order/consumer?fechaInicio=${formateador(
                inputFechaInicio.value
              )}&fechaFin=${formateador(inputFechaFin.value)}&sede=${sectorId}`,
              {
                method: "GET",
                headers: {
                  "Content-Type": "application/json",
                },
              }
            )
              .then((response) => response.json())
              .then((data) => {
                const workbook = xlsx.utils.book_new();
                const worksheet = xlsx.utils.json_to_sheet(data);
                xlsx.utils.book_append_sheet(workbook, worksheet, `Ordenes`);
                xlsx.writeFile(
                  workbook,
                  `Consumo_${sectorName}_entre_${inputFechaInicio.value}_y_${inputFechaFin.value}.xlsx`
                );
                btnDescargar.innerHTML =
                  "Descargar Excel <span class='fas fa-download'></span>";
                inputFechaInicio.value = null;
                inputFechaFin.value = null;
                sector.selectedIndex = 0;
              })
              .catch((error) => {
                spanErrores.innerHTML = error;
              });
          }
        }
      });
    </script>
  </body>
</html>
