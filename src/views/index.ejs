<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="icon" href="/img/favicon.png" />
    <link rel="stylesheet" href="/css/main.css" />
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap"
      rel="stylesheet"
    />
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css"
    />
    <link
      rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css"
    />
    <title>Informe de Ejecución</title>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js"></script>
    <script src="https://cdn.tailwindcss.com"></script>
    <script type="module">
      $(document).ready(() => {
        $("#sector").select2({
          placeholder: "-- SELECCIONE UNA O VARIAS SEDES --",
          allowClear: true,
        });
      });
    </script>
  </head>
  <body class="flex flex-col min-h-screen sm:px-20 lg:px-52 xl:px-80">
    <%- include('partials/header.ejs') %>
    <hr />
    <main class="flex flex-col mt-5 gap-2">
      <%- include('formulario.ejs') %>
      <span id="errores" class="w-full text-red-600 text-center pt-5"></span>
    </main>
    <footer class="fixed bottom-2 left-2 text-slate-400">
      Derechos Reservados - Hesego Ingeniería S.A.S - v.2
    </footer>
    <style>
      * {
        font-family: "Poppins", sans-serif;
      }
    </style>
    <script type="module">
      import xlsx from "https://cdn.sheetjs.com/xlsx-0.20.2/package/xlsx.mjs";

      const formulario = document.getElementById("formulario");
      const inputFechaInicio = document.getElementById("fechaInicio");
      const inputFechaFin = document.getElementById("fechaFin");
      const sector = document.getElementById("sector");
      const btnDescargar = document.getElementById("descargar");
      const spanErrores = document.getElementById("errores");

      const btnEjecucion = document.getElementById("btn-ejecucion");
      const btnConsumo = document.getElementById("btn-consumo");

      let estadoInforme = true;

      function generarArchivo(data, formData) {
        const workbook = xlsx.utils.book_new();
        const worksheet = xlsx.utils.json_to_sheet(data);
        xlsx.utils.book_append_sheet(workbook, worksheet, `Ordenes`);
        xlsx.writeFile(
          workbook,
          `${estadoInforme ? "Ejecucion" : "Consumo"}_${formData
            .getAll("sector")
            .map((s) => `${s.split("-")[1]}`)}_entre_${
            inputFechaInicio.value
          }_y_${inputFechaFin.value}.xlsx`
        );
      }

      function cambiarEstado(estado) {
        estadoInforme = estado;
      }

      function mostrarError(errorMsg) {
        spanErrores.innerHTML = errorMsg;
        setTimeout(() => {
          spanErrores.innerHTML = "";
        }, 3000);
        limpiarFormulario();
      }

      function limpiarFormulario() {
        btnDescargar.innerHTML =
          "Descargar Excel <span class='fas fa-download'></span>";
        inputFechaInicio.value = null;
        inputFechaFin.value = null;
        $("#sector").val(null).trigger("change");
      }

      formulario.addEventListener("submit", async (e) => {
        e.preventDefault();

        if (inputFechaFin.value < inputFechaInicio.value) {
          mostrarError(
            'La <strong>"Fecha Fin"</strong> no puede ser menor a la <strong>"Fecha Inicio"</strong>'
          );
        } else {
          btnDescargar.innerHTML = "<p>Descargando...</p>";
          const formData = new FormData(e.target);

          if (estadoInforme) {
            fetch("/order", {
              method: "POST",
              body: formData,
            })
              .then((data) => data.json())
              .then((data) => {
                generarArchivo(data, formData);
                limpiarFormulario();
              })
              .catch((err) => {
                mostrarError(err);
              });
          } else {
            fetch("/order/consumer", {
              method: "POST",
              body: formData,
            })
              .then((data) => data.json())
              .then((data) => {
                generarArchivo(data, formData);
                limpiarFormulario();
              })
              .catch((err) => {
                mostrarError(err);
              });
          }
        }
      });

      btnEjecucion.addEventListener("click", (e) => {
        btnEjecucion.className += " border-b-2 border-[#009999]";
        btnConsumo.className =
          "text-center p-3 w-full cursor-pointer hover:bg-[#009999] hover:text-white transition duration-400 rounded-t";
        cambiarEstado(true);
      });

      btnConsumo.addEventListener("click", (e) => {
        btnConsumo.className += " border-b-2 border-[#009999]";
        btnEjecucion.className =
          "text-center p-3 w-full cursor-pointer hover:bg-[#009999] hover:text-white transition duration-400 rounded-t";
        cambiarEstado(false);
      });
    </script>
  </body>
</html>
